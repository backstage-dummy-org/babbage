{{#partial "chart-config"}}
delete options.chart.marginRight;
options.chart.type="bar";

options.series=[{{!-- Negating data of first series for negative stacking in highcharts to create Population pyramid --}}
	    {
	    	name: "{{{sub (sup headers.1)}}}",
	    	{{!-- data: [{{#each data}}-1 *{{num (lookup this headers.1)}},{{/each}}] --}}
	    	data: [{{#each data}} {{#if_eq highlight (lookup this headers.0)}}{name:"{{{sup (sub (lookup this headers.1))}}}",color:HIGHLIGHT_COLOUR,y:-1 * {{num (lookup this headers.1)}} },{{else}}-1 * {{num (lookup this headers.1)}},{{/if_eq}}{{/each}}]
	    },{
	    	name: "{{{sub (sup headers.2)}}}",
	    	{{!-- data: [{{#each data}}{{num (lookup this headers.2)}},{{/each}}] --}}
	    	data: [{{#each data}} {{#if_eq highlight (lookup this headers.0)}}{name:"{{{sup (sub (lookup this headers.2))}}}",color:'gold',y:{{num (lookup this headers.2)}} },{{else}}{{num (lookup this headers.2)}},{{/if_eq}}{{/each}}]
	    }
	];
options.xAxis=[{
		    categories: [{{#each categories}}"{{{sub (sup this)}}}",{{/each}}],
		    reversed: false,
		    labels: {
				step: "{{labelInterval}}"
		    }
		},{
		    categories: [{{#each categories}}"{{{sub (sup this)}}}",{{/each}}],
		    reversed: false,
		    labels: {
		        step: "{{labelInterval}}"
		    },
		    opposite: true,
		    linkedTo: 0
		}
	];

options.yAxis.labels.formatter=function(){
	return Highcharts.numberFormat(Math.abs(this.value),0);	
};

options.tooltip={
	    formatter: function() {
	    	return this.x + '<br/>' +
	    		this.points[0].series.name + ': <b>' + Highcharts.numberFormat(-1 * this.points[0].y, {{num decimalPlaces}}) + '</b><br/>' +
	    		this.points[1].series.name + ': <b>' + Highcharts.numberFormat(this.points[1].y, {{num decimalPlaces}}) + '</b>';
	    },
		shared: true,
		useHTML:true
	};
options.plotOptions.series.stacking="normal";
{{/partial}}

{{!-- This denotes the template inherits from base-chart-config--}}
{{> highcharts/config/base/base-chart-config}} 